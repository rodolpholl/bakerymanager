
@using Kendo.Mvc.UI
@using BakeryManager.BackOffice.Models.Cadastros.Clientes
@using System.Configuration

@model ClienteModel

@Html.ValidationSummary(true)


<div class="tab-content" style="padding-top: 40px">

    <div class="tab-pane active" id="dadosgerais">

        <form id="frmCliente" rule="form" class="form-horizontal">

            @Html.HiddenFor(x => x.IdCliente)

            <div class="col-lg-8">

                <div class="form-group">
                    @Html.LabelFor(x => x.Nome, new { @class = "col-sm-2 control-label" })

                    <div class="col-sm-10">
                        @Html.Kendo().TextBoxFor(x => x.Nome).HtmlAttributes(new { @class = "form-control", style = "width: 450px; text-transform: uppercase;" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.CondicaoPagamentoPreferencial, new { @class = "col-sm-2 control-label" })

                    <div class="col-sm-10">
                        @(Html.Kendo().DropDownListFor(x => x.CondicaoPagamentoPreferencial)
                               .HtmlAttributes(new { @class = "form-control", style = "width: 300px; " })
                               .DataTextField("Descricao")
                               .DataValueField("IdCondicaoPagamento")
                               .OptionLabel("Selecione...")
                               .DataSource(datasource => datasource

                                    .Read(read => read.Action("GetListaCondicaoPagamento", "CadastroCliente"))
                               )
                         )
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.TipoCliente, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @(Html.Kendo().DropDownListFor(x => x.TipoCliente)
                            .DataTextField("Descricao")
                            .DataValueField("IdTipoCliente")
                            .DataSource(datasource => datasource
                                 .Read(read => read.Action("TipoCliente_filter", "CadastroCliente"))
                            )
                        )
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.DataAniversario, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.Kendo().DatePickerFor(x => x.DataAniversario).HtmlAttributes(new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group" id="divRazaoSocial">
                    @Html.LabelFor(x => x.RazaoSocial, new { @class = "col-sm-2 control-label" })

                    <div class="col-sm-10">
                        @Html.Kendo().TextBoxFor(x => x.RazaoSocial).HtmlAttributes(new { @class = "form-control", style = "width: 450px; text-transform: uppercase;" })
                    </div>
                </div>

                <div class="form-group" id="divCNPJ">
                    @Html.LabelFor(x => x.CNPJ, new { @class = "col-sm-2 control-label" })

                    <div class="col-sm-10">
                        @Html.Kendo().MaskedTextBoxFor(x => x.CNPJ).Mask("00,000,000/0000-00").HtmlAttributes(new { @class = "form-control"})
                    </div>
                </div>

                <div class="form-group" id="divCPF">
                    @Html.LabelFor(x => x.CPF, new { @class = "col-sm-2 control-label" })

                    <div class="col-sm-10">
                        @Html.Kendo().MaskedTextBoxFor(x => x.CPF).Mask("000,000,000-00").HtmlAttributes(new { @class = "form-control" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(x => x.CEP, new { @class = "col-sm-2 control-label" })

                    <div class="col-sm-10">
                        @Html.Kendo().MaskedTextBoxFor(x => x.CEP).Mask("00000-000").HtmlAttributes(new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Logradouro, new { @class = "col-sm-2 control-label" })

                    <div class="col-sm-10">
                        @Html.Kendo().TextBoxFor(x => x.Logradouro).HtmlAttributes(new { @class = "form-control", style = "width: 450px; text-transform: uppercase;" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Numero, new { @class = "col-sm-2 control-label" })

                    <div class="col-sm-10">
                        @Html.Kendo().TextBoxFor(x => x.Numero).HtmlAttributes(new { @class = "form-control", style = "width: 50px; text-transform: uppercase;" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Complemento, new { @class = "col-sm-2 control-label" })

                    <div class="col-sm-10">
                        @Html.Kendo().TextBoxFor(x => x.Complemento).HtmlAttributes(new { @class = "form-control", style = "width: 300px; text-transform: uppercase;" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Bairro, new { @class = "col-sm-2 control-label" })

                    <div class="col-sm-10">
                        @Html.Kendo().TextBoxFor(x => x.Bairro).HtmlAttributes(new { @class = "form-control", style = "width: 300px; text-transform: uppercase;" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Cidade, new { @class = "col-sm-2 control-label" })

                    <div class="col-sm-10">
                        @Html.Kendo().TextBoxFor(x => x.Cidade).HtmlAttributes(new { @class = "form-control", style = "width: 300px; text-transform: uppercase;" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.UF, new { @class = "col-sm-2 control-label" })

                    <div class="col-sm-10">
                        @Html.Kendo().TextBoxFor(x => x.UF).HtmlAttributes(new { @class = "form-control", style = "width: 50px; text-transform: uppercase;" })
                    </div>
                </div>

            </div>
        </form>
    </div>

    <div class="tab-pane" id="contatos">
        @(Html.Kendo().Grid<ClienteContatoModel>()
            .Name("gridContatos")
            .Columns(column =>
            {
                column.Bound(c => c.Nome).Title("Pessoa de Contato");
                column.Bound(c => c.Telefone);
                column.Bound(c => c.Email).Title("E-mail");
                column.Bound(c => c.Site);
                column.Command(cmd => cmd.Destroy().Text("Excluir")).Width(100);
            })
            .ToolBar(tb => tb.Create().Text("Adicionar"))
            .Editable(edt => edt.Mode(GridEditMode.InCell).DisplayDeleteConfirmation(false))
            .Sortable()
            .Filterable()
            .Selectable()
            .Scrollable(scr => scr.Height(200))
            .DataSource(ds => ds
                .Ajax()
                .Batch(true)
                .ServerOperation(false)
                .Model(model =>
                {
                    model.Id(x => x.IdClienteContato);
                    model.Field(x => x.Nome);
                    model.Field(x => x.Telefone);
                    model.Field(x => x.Email);
                    model.Field(x => x.Site);
                })
                .Read(read => read.Action("GetContatoCliente", "CadastroCliente").Data("getParametroContato"))
            )
        )
    </div>

</div>

<script type="text/javascript">

    function getParametroContato() {
        return {
            IdCliente: $("#IdCliente").val()
        }
    }

    function getFormObject() {

        return {

            Bairro: $("#Bairro").val(),
            CEP : $("#CEP").val(),
            Cidade : $("#Cidade").val(),
            CNPJ : $("#CNPJ").val(),
            CPF : $("#CPF").val(),
            Complemento : $("#Complemento").val(),
            Logradouro : $("#Logradouro").val(),
            Nome : $("#Nome").val(),
            Numero : $("#Numero").val(),
            RazaoSocial : $("#RazaoSocial").val(),
            UF : $("#UF").val(),
            DataAniversario: $("#DataAniversario").data("kendoDatePicker").value(),
            IdCondicaoPagamento: $("#CondicaoPagamentoPreferencial").val(),
            IdTipoCliente: $("#TipoCliente").val(),
            IdCliente: $("#IdCliente").val()
            
   
        }

    }

    function TipoClienteChange() {
        if ($("#TipoCliente").data("kendoDropDownList").value() == 1) {
            $("#divRazaoSocial").hide("slow");
            $("#divCNPJ").hide("slow");
            $("#divCPF").show("slow");
        }
        else {
            $("#divRazaoSocial").show("slow");
            $("#divCNPJ").show("slow");
            $("#divCPF").hide("slow");
        }
    }

    $(function () {


        $("#TipoCliente").change(TipoClienteChange);

        $("#CEP").focusout(function (evt) {

            var cep = $("#CEP").val().replace("_", "").replace("-", "");

            if (cep.length == 8) {

                $.ajax({
                    url: '@ConfigurationManager.AppSettings["ServicoBuscaCep"]' + cep + '/json/',
                    data: 'json',
                    success: function (data) {

                        $("#Logradouro").val(data.logradouro);
                        $("#Complemento").val(data.complemento);
                        $("#Bairro").val(data.bairro);
                        $("#Cidade").val(data.localidade);
                        $("#UF").val(data.uf);

                        document.getElementById("Numero").focus();

                    }

                });

            }

        });

    });

</script>