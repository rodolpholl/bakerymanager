@using BakeryManager.BackOffice.Models.Questionario
@using Kendo.Mvc.UI

@model QuestionarioModel


@Html.ValidationSummary(true)


<div class="tab-content" style="padding-top: 40px">

    <div class="tab-pane active" id="dadosgerais">

        <form id="frmQuestionario" rule="form" class="form-horizontal">

            @Html.HiddenFor(x => x.IdQuestionario)

            <div class="form-group">
                @Html.LabelFor(x => x.Nome, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.Kendo().TextBoxFor(x => x.Nome).HtmlAttributes(new { @class = "form-control", style = "width: 450px; text-transform: uppercase;" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label(" ", new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.Kendo().CheckBoxFor(x => x.UsaPrazoExpiracao)
                </div>
            </div>

            <div class="form-group" id="divPrazo">
                @Html.LabelFor(x => x.PrazoExpiracao, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.Kendo().NumericTextBoxFor(x => x.PrazoExpiracao).HtmlAttributes(new {  style = "width: 100px;" }).Value(0).Min(1).Step(1).Decimals(0).Format("n0")
                </div>
            </div>

        </form>
    </div>

    <div class="tab-pane" id="perguntas">

        @(Html.Kendo().Grid<QuestionarioPerguntaModel>()
        .Name("gridPerguntas")
        .Columns(columns =>
        {
            columns.Bound(c => c.Descricao).Title("Pergunta");
            columns.Bound(c => c.Peso).Width(100).EditorTemplateName("Peso");
            columns.Bound(c => c.TipoResposta).Title("Tipo de Resposta").ClientTemplate("#=TipoResposta.Descricao#").Width(160);

        })
        .ToolBar(tb => tb.Create().Text("Adicionar"))
        .Editable(edt => edt.Mode(GridEditMode.InCell).DisplayDeleteConfirmation(false))
        .Sortable()
        .Filterable()
        .Selectable()
        .Scrollable(scr => scr.Height(200))
        .DataSource(datasource => datasource

            .Ajax()
            .Batch(true)
            .ServerOperation(false)
            .Model(model => {

                model.Id(id => id.IdQuestionarioPergunta);
                model.Field(f => f.Descricao);
                model.Field(f => f.TipoResposta).DefaultValue(
                    ((IList<TipoRespostaModel>)ViewData["ListaTipoResposta"]).FirstOrDefault() ??
                    new TipoRespostaModel());                
                model.Field(f => f.Peso);

            })
            .Read(read => read.Action("GetPerguntasQuestionario", "ManterQuestionario").Data("GetIdQuestionario"))
            )

         )

    </div>

</div>



<script type="text/javascript">


    function GetIdQuestionario() {
        return {
            IdQuestionario: $("#IdQuestionario").val()
        }
    }
    
    function UsarPrazoChange() {


        if ($("#UsaPrazoExpiracao").prop("checked"))
            $("#divPrazo").show("slow");
        else
            $("#divPrazo").hide("slow");
            

    }
    function GetFormData() {
        return {
            Nome: $("#Nome").val(),
            PrazoExpiracao: $("#PrazoExpiracao").val(),
            UsaPrazoExpiracao: $("#UsaPrazoExpiracao").is(":checked"),
            IdQuestionario: $("#IdQuestionario").val()
        };
    }


    UsarPrazoChange();

    $(function () {

        $("#PrazoExpiracao").data("kendoNumericTextBox").value('@(Model.PrazoExpiracao.ToString())')    
        $("#UsaPrazoExpiracao").change(UsarPrazoChange);
            

    });

</script>