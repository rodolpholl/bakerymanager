@model BakeryManager.BackOffice.Models.Login.LoginModel

@{
    ViewBag.Title = "Controle de Acesso";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}



<div class="container-fluid">


    <div class="row">
        @*cl-lg-offset é que centraliza na horizontal*@
        <div class="col-md-4 col-md-offset-4">
            <div class="panel panel-default" style="margin-top: 100px;">
                <div class="panel-heading">
                    <h3 class="panel-title">Login</h3>
                </div>
                <div class="panel-body">
                    @using (Html.BeginForm("Index", "Login", FormMethod.Post, new { id = "frmLogin",  role = "form" }))
                    {
                        <fieldset>
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)

                            <div class="form-group" >
                                
                                    @Html.TextBoxFor(x => x.Login, new { @class = "form-control", style = "text-transform: uppercase;", placeHolder = "informe seu Login", autofocus = true })
                                    @Html.ValidationMessageFor(m => m.Login)
                              
                            </div>
                            <div class="form-group">
                                
                                    @Html.PasswordFor(x => x.Senha, new { @class = "form-control",  placeHolder = "Informe sua Senha" })
                                    @Html.ValidationMessageFor(m => m.Senha)
                                    
                            </div>
                            <div class="text">
                                <label>
                                    Deixe este campo em branco se for o primeiro acesso.
                                </label>
                            </div>
                            <a href="#" id="btnEnviar" class="btn btn-lg btn-success btn-block">Entrar</a>

                            @if (Model.ErrorMensage != null && Model.ErrorMensage != string.Empty)
                            {
                                <div class="form-group">
                                
                                    <div class="alert alert-danger">
                                        <strong>Erro de Autenticação!</strong><br />
                                        @Model.ErrorMensage
                                    </div>
                                
                                </div>
                            }
                        </fieldset>
                    }
                </div>
                    
                </div>

        </div>
    </div>

</div>

@section Scripts {

    <script src="~/Scripts/crypto/sha256.js"></script>
    <script src="~/Scripts/crypto/enc-base64-min.js"></script>
    <script type="text/javascript">



        


        $(function () {

            function doEnterKeyPress(event) {
                var keycode = event.keyCode ? event.keyCode : event.which;
                if (keycode == 13)
                    $("#btnEnviar").click();
            }

            $("#Login").keyup(doEnterKeyPress);
            $("#Senha").keyup(doEnterKeyPress);

            $("#btnEnviar").click(function () {



                if ($("#Login").val() != "BM_MASTER") {

                    if ($("#Senha").val() != "") {

                        var senhaCriptHash = CryptoJS.SHA256($("#Senha").val());
                        var senhaCript = senhaCriptHash.toString(CryptoJS.enc.Base64);

                        $("#Senha").val(senhaCript);
                    }

                }

                $("#Senha").prop("disabled", "disabled");
                $("#Login").prop("disabled", "disabled");
                $.ajax({
                    url: '@Url.Action("Index")',
                    data: {
                        Login: {
                            Login: $("#Login").val(),
                            Senha: $("#Senha").val()
                        }
                    },
                    dataType: "json",
                    method: "POST",
                    success: function (data) {

                        if (data.TipoMensagem == 1) {
                            alert(data.Mensagem, null, data.TipoMensagem);
                            $("#Senha").val("");
                            $("#Senha").prop("disabled", "");
                            $("#Login").prop("disabled", "");
                        }

                        else {

                            $.getJSON('@Url.Action("GetLoginInformation", "Shared")',
                          function (data) {

                              setUserLogedData(data.Nome, data.Login, data.Atribuicao)

                              
                          });


                          window.location.href = data.URLDestino;
                        }

                    }
                });


            });

        });

    </script>

}
