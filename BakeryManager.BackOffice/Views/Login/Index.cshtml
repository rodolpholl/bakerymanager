@model BakeryManager.BackOffice.Models.Login.LoginModel

@{
    ViewBag.Title = "Controle de Acesso";
}



<div class="container-fluid">


    <div class="row">
        @*cl-lg-offset é que centraliza na horizontal*@
        <div class="col-lg-4 col-lg-offset-4">
            <div class="panel panel-default" style="margin-top: 100px;">
                <div class="panel-heading">
                    <h2 class="panel-title"><strong>Login</strong></h2>
                </div>
                @using (Html.BeginForm("Index", "Login", FormMethod.Post, new { id = "frmLogin", data_messageType = "modal", @class = "form-horizontal", rule = "form" }))
            {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)

                    <div class="form-group">
                        @Html.LabelFor(x => x.Login, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.Login, new { @class = "form-control", style = "width: 200px; text-transform: uppercase;", placeHolder = "informe seu Login" })
                            @Html.ValidationMessageFor(m => m.Login)
                        </div>

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Senha, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @Html.PasswordFor(x => x.Senha, new { @class = "form-control", style = "width: 200px", placeHolder = "Informe sua Senha" })
                            @Html.ValidationMessageFor(m => m.Senha)
                            <i>Deixe este campo em branco e for o primeiro acesso.</i>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-offset-2 col-sm-10">
                            <button type="submit" class="btn btn-primary">
                                Entrar
                            </button>
                        </div>
                    </div>
                    if (Model.ErrorMensage != null && Model.ErrorMensage != string.Empty)
                    {
                        <div class="form-group">
                            <div class="col-sm-10">
                                <div class="alert alert-danger">
                                    <strong>Erro de Autenticação!</strong><br />
                                    @Model.ErrorMensage
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>

</div>

@section Scripts {

    <script src="~/Scripts/crypto/sha256.js"></script>
    <script src="~/Scripts/crypto/enc-base64-min.js"></script>
    <script type="text/javascript">


        $(function () {


            $("#frmLogin").submit(function () {



                if ($("#Login").val() != "BM_MASTER") {

                    if ($("#Senha").val() != "") {

                        var senhaCriptHash = CryptoJS.SHA256($("#Senha").val());
                        var senhaCript = senhaCriptHash.toString(CryptoJS.enc.Base64);

                        $("#Senha").val(senhaCript);
                    }

                }

            });

        });

    </script>

}
