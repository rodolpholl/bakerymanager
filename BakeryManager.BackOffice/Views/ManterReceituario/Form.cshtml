@using BakeryManager.BackOffice.Models.ManterReceita
@using Kendo.Mvc.UI
@model FormulaModel

@Html.AntiForgeryToken()
@Html.ValidationSummary(true)
@Html.HiddenFor(x => x.IdFormula)




<ul class="nav nav-tabs" data-tabs="tabs">
    <li role="presentation" class="active"><a href="#dadosgerais" data-toggle="tab">Dados Gerais</a></li>
    <li role="presentation"><a href="#formula" data-toggle="tab">Fórmula</a></li>
</ul>



<div class="tab-content" style="padding-top: 40px">

    <div class="tab-pane active" id="dadosgerais">
        <div class="col-lg-8">
            <div class="form-group">
                @Html.LabelFor(x => x.Categoria, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @(Html.Kendo().DropDownListFor(x => x.Categoria).DataTextField("Nome").DataValueField("IdCategoriaProduto")
                    .OptionLabel("Todos")
                    .DataSource(ds =>
                    {
                        ds.Read(r => r.Action("ListarCategorias", "ManterReceituario"));
                    }))
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Produto, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @(Html.Kendo().DropDownListFor(x => x.Produto)
                                          .DataTextField("Nome")
                                          .DataValueField("IdProduto")
                                          .OptionLabel("Todos")
                                          .Filter("contains")
                                          .MinLength(3)
                                          .DataSource(source =>
                                          {
                                              source.Read(read =>
                                              {
                                                  read.Action("ListarProduto", "ManterReceituario").Data("getCategoriaForPesquisa");
                                              })
                                                  .ServerFiltering(true);
                                          })
                                          .AutoBind(false)
                                          .Events(e => e.Change("onFilterChange"))
                                          .CascadeFrom("cbxCategoriaPesquisa")
                    )
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Descricao, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.Kendo().TextBoxFor(x => x.Descricao)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.DataEmissao, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.Kendo().DatePickerFor(x => x.DataEmissao).Format("{0:dd/MM/yyyy}")
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.DataFimValidade, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.Kendo().DatePickerFor(x => x.DataFimValidade).Format("{0:dd/MM/yyyy}")
                </div>
            </div>
        </div>
    </div>
    <div class="tab-pane" id="formula">

    </div>
</div>
