@using BakeryManager.BackOffice.Models.ManterReceita
@using BakeryManager.BackOffice.Models.Cadastros.Produtos
@using Kendo.Mvc.UI
@model FormulaModel

@{
    ViewBag.Title = "Manter Receituario";
}

<div class="container-fluid">

    <!-- Page Heading -->
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                @ViewBag.Title
            </h1>
            <ol class="breadcrumb">
                <li>
                    <i class="fa fa-table"></i>  <a href="@Url.Action("Index","Home")">Receitas</a>
                </li>
                <li class="active">
                    <i class="fa fa-file"></i> @ViewBag.Title
                </li>
            </ol>
        </div>
    </div>
    <!-- /.row -->

    <div class="row">
        <div class="col-lg-8">
            <form role="form">
                <label>Categoria</label>
                <div class="form-group">

                    @(Html.Kendo().DropDownList().Name("cbxCategoriaPesquisa").DataTextField("Nome").DataValueField("IdCategoriaProduto")
                    .OptionLabel("Todos")
                    .Events(e => e.Change("onFilterChange"))
                      .DataSource(ds =>
                      {
                          ds.Read(r => r.Action("ListarCategorias", "ManterReceituario"));
                      }))
                </div>

                <label>Produto</label>
                <div class="form-group">

                    @(Html.Kendo().DropDownList()
                                          .Name("cbxProdutoPesquisa")
                                          .DataTextField("Nome")
                                          .DataValueField("IdProduto")
                                          .OptionLabel("Todos")
                                          .Filter("contains")
                                          .MinLength(3)
                                          .DataSource(source =>
                                          {
                                              source.Read(read =>
                                              {
                                                  read.Action("ListarProduto", "ManterReceituario").Data("getCategoriaForPesquisa");
                                              })
                                                  .ServerFiltering(true);
                                          })
                                          .AutoBind(false)
                                          .Events(e => e.Change("onFilterChange"))
                                          .CascadeFrom("cbxCategoriaPesquisa")
                    )
                </div>

            </form>
        </div>
    </div>
    <!-- /.row -->

    <div class="row">
        <div class="col-lg-12">
            @(Html.Kendo().Grid<ProdutoModel>()
              .Name("grid")
              .Columns(column =>
              {
                  column.Bound(c => c.Categoria.Nome).Sortable(true).Filterable(false).Title("Categoria");
                  column.Bound(c => c.Nome).Filterable(false).Title("Produto").Sortable(true);
              }
              )
              .ToolBar(t => t.Custom().Text("Nova Formula").Url(Url.Action("Criar")).HtmlAttributes(new { @class = "k-button k-button-icontext k-grid-add" }))
              .Sortable()
              .Pageable()
              .Scrollable(src => src.Height("auto"))
              .ClientDetailTemplateId("tmplDetalhe")
              .DataSource(ds => ds
                .Ajax()
                 .Batch(false)
                 .PageSize(30)
                 .ServerOperation(true)
                .Read(read => read.Action("Read", "ManterReceituario").Data("getDadosForPesquisa"))
                .Model(model =>
                {
                    model.Id(x => x.IdProduto);
                    model.Field(x => x.Nome);
                    model.Field(x => x.Categoria);
                })
              )

              .Events(events => events.DataBound("gridMasterDataBound"))
            )

        </div>
    </div>

</div>


<script id="tmplDetalhe" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<FormulaModel>()
        .Name("grid_#=IdProduto#")
        .Columns(column =>
        {

            column.Bound(c => c.Descricao);
            column.Bound(c => c.DataEmissao).Width(250).Format("{0:dd/MM/yyyy}");
            column.Bound(c => c.EmUso).Width(180).ClientTemplate("\\#if (EmUso) {\\# Sim \\#} else {\\# Não \\#}\\#");

        })

        .Pageable()
        .Navigatable()
        .Scrollable()
        .Filterable()

        .DataSource(ds => ds
                .Ajax()
                .PageSize(15)
                .Model(model =>
                {
                    model.Id(i => i.IdFormula);
                    model.Field(f => f.Descricao);
                    model.Field(f => f.DataEmissao);
                    model.Field(f => f.EmUso);
                })
                .Read(read => read.Action("Read_Detail", "ManterReceituario", new { IdProduto = "#=IdProduto#" }))
            )
            .ToClientTemplate()

    )
</script>

@section scripts{

    <script type="text/javascript">

        function getCategoriaForPesquisa() {

            return { IdCategoria: $("#cbxCategoriaPesquisa").val() }
        }

        function getDadosForPesquisa() {



            return {
                IdCategoria: $("#cbxCategoriaPesquisa").val(),
                IdProduto: $("#cbxProdutoPesquisa").val()
            }
        }

        function onFilterChange() {

            $("#grid").data("kendoGrid").dataSource.read();

        }

        function gridMasterDataBound() {
            this.expandRow(this.tbody.find("tr.k-master-row").first());
        }

    </script>

}