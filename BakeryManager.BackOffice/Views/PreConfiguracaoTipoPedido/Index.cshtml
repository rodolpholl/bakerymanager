@using Kendo.Mvc.UI
@using BakeryManager.BackOffice.Models.Pedido

@{
    ViewBag.Title = "Pré-configurar Materiais Adicionais por Tipos de Pedidos";
}

<div class="container-fluid">
    <!-- Page Heading -->
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                @ViewBag.Title
            </h1>
            <ol class="breadcrumb">
                <li>
                    <i class="fa fa-table"></i>  <a href="@Url.Action("Index","Home")">Pedidos</a>
                </li>

                <li class="active">
                    <i class="fa fa-file"></i> @ViewBag.Title
                </li>
            </ol>
        </div>
    </div>

    <div>
        <div class="col-lg-8">
            <form role="form">
                <label>Tipo de Pedido</label>
                <div class="form-group">
                    @(Html.Kendo().DropDownList().Name("cbxTipoPedido")
                      .DataValueField("IdTipoPedido").DataTextField("Descricao").OptionLabel("- Selecione -")
                      .DataSource(datasource =>
                      datasource.Read(read => read.Action("GetListaTipoPedido", "PreConfiguracaoTipoPedido")))

                    )

                </div>
            </form>
        </div>
    </div>
    <!-- /.row -->
    <div class="row">
        <div class="col-xs-12">



            @(Html.Kendo().Grid<PedidoMaterialAdicionalPreConfigModel>()

            .Name("grid")
            .Columns(columns =>
            {
                columns.Bound(c => c.Material).Title("Material").EditorTemplateName("MaterialComboTemplate").ClientTemplate("#=Material.Descricao#");
                columns.Bound(c => c.Quantidade).EditorTemplateName("QuantidadeTemplate");
                columns.Bound(c => c.TipoAquisicao).EditorTemplateName("TipoAquisicaoTemplate").Title("Tipo de Aquisição").ClientTemplate("#=TipoAquisicao.Nome#");
                columns.Command(cmd => cmd.Destroy()).Width(100);


            })

            .ToolBar(toolbar =>
            {
                toolbar.Create();
                toolbar.Save();
            })
                .Editable(editable => editable.Mode(GridEditMode.InCell).Window(w => w.Width(460)).DisplayDeleteConfirmation(false))
                .Pageable()
                .Sortable()
                .Scrollable(scr => scr.Height("auto"))
                .Navigatable()
                .Scrollable()
                .DataSource(ds => ds
                    .Ajax()
                    .PageSize(30)
                    .ServerOperation(true)
                    .Batch(true)
                    .Events(events => events.Error("error_handler"))
                    .Model(model =>
                    {

                        model.Id(p => p.IdPedidoMaterialAdicionalPreConfig);
                        model.Field(f => f.Quantidade);
                        model.Field(f => f.TipoAquisicao).DefaultValue(new TipoAquisicaoTemporariaModel()
                        {
                            IdTipoAquisicaoTemporaria = 0,
                            Nome = "Selecione um Tipo"
                        });
                        model.Field(f => f.Material).DefaultValue(new MaterialAdicionalModel()
                        {
                            Descricao = "Comprar",
                            IdMaterialAdicional = 2
                        });

                    })
                    .Create(create => create.Action("Create", "PreConfiguracaoTipoPedido").Data("GetSelectdTipoPedido"))
                    .Update(update => update.Action("Edit", "PreConfiguracaoTipoPedido").Data("GetSelectdTipoPedido"))
                    .Read(read => read.Action("Read", "PreConfiguracaoTipoPedido").Data("GetSelectdTipoPedido"))
                    .Destroy(delete => delete.Action("Delete", "PreConfiguracaoTipoPedido")))

            )


        </div>
    </div>
</div>

@section scripts {

<script type="text/javascript">

    function GetSelectdTipoPedido() {
        return {
            IdTipoPedido: $("#cbxTipoPedido").data("kendoDropDownList").value()
        }
    }

    function GetSelectedData() {

        var listaSelect = $("#grid").data("kendoGrid").dataSource.view();
        var listaMaterial = [];

        $(listaSelect).each(function (index, item) {
            if (item.Material != undefined)
                listaMaterial.push(item.Material);
        });

        return {
            ListaMateriaisSelecionados: listaMaterial
        }

    }

    $(function () {

        $("#cbxTipoPedido").change(function () {

            $("#grid").data("kendoGrid").dataSource.read();

        });

    });


</script>
    
}
