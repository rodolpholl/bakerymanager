@using BakeryManager.BackOffice.Models.Cadastros.Funcionarios
@using Kendo.Mvc.UI

@{
    ViewBag.Title = "Cadastro de Funcionários";
}


<div class="container-fluid">
    <!-- Page Heading -->
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                @ViewBag.Title
            </h1>
            <ol class="breadcrumb">
                <li>
                    <i class="fa fa-table"></i>  <a href="@Url.Action("Index","Home")">Cadastros</a>
                </li>
                <li class="active">
                    <i class="fa fa-file"></i> @ViewBag.Title
                </li>
            </ol>
        </div>
    </div>
    <!-- /.row -->

    <div class="row">
        <div class="col-lg-12">
            @(
               Html.Kendo().Grid<FuncionarioModel>()
               .Name("grid")
               .Columns(columns =>
               {
                   columns.Bound(c => c.Nome);
                   columns.Bound(c => c.TelefoneFixo).Title("Telefone Fixo");
                   columns.Bound(c => c.TelefoneCelular).Title("Celular");
                   columns.Bound(c => c.Email).Title("E-Mail");
                   columns.Bound(c => c.HorarioEntrada).Title("Entrada").Format("{0:dd/MM/yyyy}");
                   columns.Bound(c => c.HorarioSaida).Title("Saída").Format("{0:dd/MM/yyyy}");
                   columns.Bound(c => c.IdFuncionario).Title("").Filterable(false).Width(100).ClientTemplate("<a href=\"" + Url.Action("Editar") + "/#=IdFuncionario#\"  class=\"btn btn-default btn-sm\"><span class=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>&nbsp;Editar</a>");
               })
               .ToolBar(t => t.Custom().Text("Novo Funcionário").Url(Url.Action("Criar")).HtmlAttributes(new { @class = "k-button k-button-icontext k-grid-add" }))
               .Pageable()
               .Sortable()
               .Filterable()
               .Selectable()
               .Navigatable()
               .Scrollable(scr => scr.Height(450))

               .DataSource(datasource => datasource
                .Ajax()
                .Batch(false)
                .Model(model => {

                    model.Id(m => m.IdFuncionario);
                    model.Field(f => f.Nome);
                    model.Field(f => f.TelefoneCelular);
                    model.Field(f => f.TelefoneFixo);
                    model.Field(f => f.Email);
                    model.Field(f => f.HorarioEntrada);
                    model.Field(f => f.HorarioSaida);

                })
                .Read(read => read.Action("Read", "ManterFunconarios"))
               )
            )
        </div>
    </div>

</div>