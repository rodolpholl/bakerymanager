@using Kendo.Mvc.UI
@using BakeryManager.BackOffice.Models.Cadastros.Funcionarios
@model FuncionarioModel

@Html.ValidationSummary(true)

<div style="padding-top: 40px">

    <form id="frmFuncionario" rule="form" class="form-horizontal">

        @Html.HiddenFor(x => x.IdFuncionario)

        <div class="col-lg-8">


            <div class="form-group">

                @Html.LabelFor(x => x.Nome, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.Kendo().TextBoxFor(x => x.Nome).HtmlAttributes(new {  style = "width: 450px; text-transform: uppercase;" })
                </div>
            </div>

            <div class="form-group" id="divCPF">
                @Html.LabelFor(x => x.CPF, new { @class = "col-sm-2 control-label" })

                <div class="col-sm-10">
                    @Html.Kendo().MaskedTextBoxFor(x => x.CPF).Mask("000,000,000-00")
                </div>
            </div>

            <div class="form-group">

                @Html.LabelFor(x => x.RG, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.Kendo().TextBoxFor(x => x.RG).HtmlAttributes(new {  style = "width: 150px; text-transform: uppercase;" })
                </div>
            </div>

            <div class="form-group">

                @Html.LabelFor(x => x.CTPS, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.Kendo().TextBoxFor(x => x.CTPS).HtmlAttributes(new {  style = "width: 150px; text-transform: uppercase;" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(x => x.CEP, new { @class = "col-sm-2 control-label" })

                <div class="col-sm-10">
                    @Html.Kendo().MaskedTextBoxFor(x => x.CEP).Mask("00000-000").HtmlAttributes(new {  style= "width: 150px;" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Logradouro, new { @class = "col-sm-2 control-label" })

                <div class="col-sm-10">
                    @Html.Kendo().TextBoxFor(x => x.Logradouro).HtmlAttributes(new { style = "width: 450px; text-transform: uppercase;" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Numero, new { @class = "col-sm-2 control-label" })

                <div class="col-sm-10">
                    @Html.Kendo().TextBoxFor(x => x.Numero).HtmlAttributes(new {  style = "width: 50px; text-transform: uppercase;" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Complemento, new { @class = "col-sm-2 control-label" })

                <div class="col-sm-10">
                    @Html.Kendo().TextBoxFor(x => x.Complemento).HtmlAttributes(new {  style = "width: 300px; text-transform: uppercase;" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Bairro, new { @class = "col-sm-2 control-label" })

                <div class="col-sm-10">
                    @Html.Kendo().TextBoxFor(x => x.Bairro).HtmlAttributes(new {  style = "width: 300px; text-transform: uppercase;" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Cidade, new { @class = "col-sm-2 control-label" })

                <div class="col-sm-10">
                    @Html.Kendo().TextBoxFor(x => x.Cidade).HtmlAttributes(new {  style = "width: 300px; text-transform: uppercase;" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.UF, new { @class = "col-sm-2 control-label" })

                <div class="col-sm-10">
                    @Html.Kendo().TextBoxFor(x => x.UF).HtmlAttributes(new {  style = "width: 50px; text-transform: uppercase;" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.TelefoneFixo, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.Kendo().TextBoxFor(x => x.TelefoneFixo)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.TelefoneCelular, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.Kendo().TextBoxFor(x => x.TelefoneCelular)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Email, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.Kendo().TextBoxFor(x => x.Email).HtmlAttributes(new { style = "width: 450px;" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.DataInicioTrabalho, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.Kendo().DatePickerFor(x => x.DataInicioTrabalho).HtmlAttributes(new { style = "width: 130px;" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.HorarioEntrada, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.Kendo().TimePickerFor(x => x.HorarioEntrada).HtmlAttributes(new { style = "width: 100px;" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.HorarioSaida, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.Kendo().TimePickerFor(x => x.HorarioSaida).HtmlAttributes(new { style = "width: 100px;" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.RemuneracaoAtual, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.Kendo().NumericTextBoxFor(x => x.RemuneracaoAtual).HtmlAttributes(new { style = "width: 130px;" }).Decimals(2).Step(.05).Min(0).Format("{0:C}")
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.SituacaoAtual, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @(Html.Kendo().DropDownListFor(x => x.SituacaoAtual).HtmlAttributes(new { style = "width: 130px;" })
                    .DataTextField("Descricao").DataValueField("IdSituacaoFuncionario")
                    .DataSource(ds =>                    
                        ds.Read(read => read.Action("GetListaSituacaoFuncionario", "ManterFunconarios"))
                    )
                    
                    )
                     
                </div>
            </div>

        </div>
    </form>

</div>
<script type="text/javascript">

    function getFormObject() {

        return {

            Bairro: $("#Bairro").val(),
            CEP: $("#CEP").val(),
            Cidade: $("#Cidade").val(),
            CPF: $("#CPF").val(),
            Complemento: $("#Complemento").val(),
            Logradouro: $("#Logradouro").val(),
            Nome: $("#Nome").val(),
            Numero: $("#Numero").val(),
            UF: $("#UF").val(),
            RG: $("#RG").val(),
            CTPS: $("#CTPS").val(),
            Email: $("#Email").val(),
            TelefoneFixo: $("#TelefoneFixo").val(),
            TelefoneCelular: $("#TelefoneCelular").val(),
            DataInicioTrabalho: $("#DataInicioTrabalho").data("kendoDatePicker").value(),
            HorarioEntrada: $("#HorarioEntrada").data("kendoTimePicker").value(),
            HorarioSaida: $("#HorarioSaida").data("kendoTimePicker").value(),
            RemuneracaoAtual: $("#RemuneracaoAtual").data("kendoNumericTextBox").value(),
            SituacaoAtual: {
                IdSituacaoFuncionario: $("#SituacaoAtual").val()
            },

            IdFuncionario: $("#IdFuncionario").val()


        }
    }

    $("#CEP").focusout(function (evt) {

        var cep = $("#CEP").val().replace("_", "").replace("-", "");

        if (cep.length == 8) {

            $.ajax({
                url: 'https://viacep.com.br/ws/' + cep + '/json/',
                data: 'json',
                success: function (data) {

                    $("#Logradouro").val(data.logradouro);
                    $("#Complemento").val(data.complemento);
                    $("#Bairro").val(data.bairro);
                    $("#Cidade").val(data.localidade);
                    $("#UF").val(data.uf);

                    document.getElementById("Numero").focus();

                }

            });

        }

    });
</script>
